
SCRIPT_DIR = '/data/projects/kimona/scripts/bachelor_thesis/scripts'
DATA_DIR = '/data/projects/kimona/data_18-05-22'

DATABASES = ['ncbi', 'viralzone', 'phagesdb']

# if HOSTS = '' , TRAIN_NUM should be bigger than 1
# HOSTS = 'mycobac,strepto,escheri,gordoni,pseudom,arthrob,lactoco,staphyl'

# less 004_hosts.counts | head -n 15 | grep -v no_host | sed 's/\s.*\s//' | tr '\n' ',' | less
HOSTS = 'mycobac,escheri,strepto,gordoni,pseudom,arthrob,lactoco,salmone,staphyl,bacillu,vibrio_,synecho,propion,microba'
TRAIN_NUM = 8
TRAIN_PERCENTAGE = 0.8

THREADS = 12
SUFFIXES = ['genomes.fasta', 'genomes.conversion', 'genes.fasta', 'genes.conversion']

# CLUSTERS = [1, 2, 3]
CLUSTERS = [1]

VARIANCE_THRESHOLD = 0.01

# less 006_test.genomes.fasta | grep "^>" | tr -d '>' | tr '\n' ',' | less
# PHAGES = 'phage0005309,phage0005377,phage0005898,phage0001424,phage0005329,phage0002284,phage0003202,phage0003198,phage0001297,phage0004464,phage0004280,phage0002782,phage0003704,phage0004281,phage0001233,phage0005661,phage0005178,phage2001241,phage0000094,phage2001535,phage2000563,phage2001740,phage0002038,phage0002037,phage2001556,phage0006181,phage2001790,phage2001137,phage0000851,phage0000847,phage2000785,phage2001273,phage2000758,phage2000200,phage0000195,phage0003144,phage2000747,phage2001841,phage0000869,phage2002033,phage0004890,phage0004381,phage0006301,phage0004091,phage0003685,phage0001351,phage0002676,phage0002357,phage2002292,phage2001302,phage2000831,phage0000077,phage0001393,phage0001394,phage0001389,phage2000851,phage0005707,phage2001091,phage0001944,phage2000658,phage0005756,phage0001209,phage0000086,phage0001286,phage0003369,phage0001507,phage0001530,phage0004820,phage0000718,phage0004361,phage0002323,phage0002908,phage0003942,phage0002354,phage0000829,phage0004968,phage0003932,phage2002409,phage0002836,phage0001685,phage0002356,phage0004190,phage0001411,phage0000317,phage0004024,phage0001735,phage2001505,phage0002763,phage2000286,phage0005832,phage0002239,phage2002402,phage0001211,phage0005274,phage0005259,phage0001705,phage2001543,phage0005117,phage0000111,phage0005978,phage0000070,phage2001527,phage0002169,phage0000243,phage0003253,phage2001461,phage2002285,phage2000676,phage2000868,phage2000860,phage0001369,phage0005883,phage2002374,phage2001006,phage2000904,phage0000821,phage0004348,phage0004029,phage0002264,phage2001964,phage0001382,phage0000671,phage0002903,phage0005662,phage0000689,phage0001324,phage2000797,phage2000776,phage2001882,phage0000127,phage0002152,phage2000966,phage0001482,phage2000317,phage0004177,phage0004293,phage0001734,phage0005064,phage2001445,phage0004780,phage0006211,phage0002182,phage2000779,phage2001351,phage0000091,phage2001792,phage0001531,phage2001100,phage2001888,phage2000492,phage0005744,phage2000454,phage2001758,phage2002378,phage0006245,phage0003982,phage0003973,phage2002369,phage0000830,phage2001752,phage0000071,phage0000173,phage2002160,phage0004806,phage2002314,phage0002331,phage0004796,phage0002330,phage0003976,phage0005187,phage0002167,phage0003699,phage2000911,phage2002114,phage2002362,phage2000203,phage0001502,phage2001481,phage2002436,phage0004669,phage2002250,phage0002032,phage2000186,phage0006242,phage2000672,phage0000841,phage0005787,phage2001833,phage2001951,phage0000272,phage0003712,phage0000820,phage2001139,phage2000769,phage0000176,phage2001909,phage0002456,phage0003050,phage0003449,phage0005543,phage0002905,phage0003356,phage0000294,phage0005653,phage0003454,phage0003730,phage0002635,phage0006204,phage2002345,phage0001671,phage2001155,phage2000260,phage0000063,phage2001110,phage2000426,phage0003000,phage0005785,phage0003729,phage0003732,phage0003042,phage0001396,phage0002656,phage0000882,phage0003289,phage0001794,phage0001030,phage2000119,phage2000460,phage0003726,phage2000532,phage0004185,phage0001112,phage2002101,phage0001105,phage2002431,phage2001538,phage0002589,phage0005100,phage0002998,phage0003442,phage0005567,phage0005542,phage0002153,phage0005775,phage2000032,phage2002467,phage0000980,phage2001876,phage0001547,phage2002199,phage2001879,phage0005173,phage2001873,phage2002087,phage0000088,phage0001955,phage0002202,phage2001416,phage0002237,phage2000036,phage0001480,phage0001214,phage2001935,phage2001147,phage0001136,phage2001803,phage1000707,phage2002120,phage0000693,phage2001269,phage0000439,phage0003076,phage0002383,phage0005156,phage2001181,phage0000938,phage0004186,phage2002223,phage2000740,phage0000271,phage0001168,phage0001092,phage2001547,phage2000310,phage0002272,phage0004878,phage0002631,phage2000131,phage2000932,phage0000186,phage0000244,phage0001942,phage0004187,phage0003351,phage2001285,phage0003245,phage2002237,phage0001111,phage0001954,phage0005973,phage2001500,phage2001323,phage2002245,phage0001117,phage0002352,phage2000486,phage2000939,phage2000566,phage0002351,phage0006632,phage0000686,phage2002125,phage2002331,phage0004851,phage0002233,phage0005637,phage2000771,phage2000657,phage2002385,phage2000244,phage2002480,phage2001891,phage0006073,phage2002252,phage2000709,phage0000507,phage0000620,phage0000491,phage0005182,phage0005181,phage2002007,phage0000499,phage2000489,phage2000993,phage0000556,phage0000213,phage0001466,phage2002025,phage2001023,phage2000943,phage2001516,phage2002086,phage0001263,phage0000544,phage0000513,phage2000122,phage2000141,phage0000559,phage2001837,phage0000569,phage0000474,phage2000551,phage2000764,phage0000478,phage2001244,phage2000721,phage0005189,phage2001960,phage2001929,phage0002309,phage0004852,phage2001280,phage0000489,phage0004847,phage0000532,phage2001692,phage0004995,phage2000106,phage0000567,phage2001052,phage0004175,phage0004798,phage0005878,phage2002371,phage2000798,phage2001548,phage2000156,phage2001034,phage0000183,phage0000067,phage0001681,phage2000393,phage2001444,phage0001682,phage2001186,phage0000688,phage2001558,phage0000534,phage0001680,phage2001701,phage2000281,phage0001746,phage0001747,phage2001365,phage0000576,phage0000588,phage0001679,phage0000662,phage0000660,phage0001290,phage0000516,phage2000173,phage0005823,phage0000557,phage2001963,phage2001885,phage0005184,phage2002205,phage2000720,phage0005003,phage2000268,phage2001457,phage0000931,phage0005977,phage2000685,phage0001957,phage0000599,phage2000220,phage0000084,phage0004841,phage0000607,phage2000439,phage0000241,phage2000505,phage2000570,phage2001595,phage0002341,phage0000522,phage2000906,phage0002157,phage0002199,phage2001043,phage2000936,phage2000879,phage0000932,phage2001518,phage0003341,phage2001233,phage0000497,phage2001066,phage0000657,phage2001195,phage0005576,phage2000717,phage2001650,phage0000933,phage0000175,phage2000832,phage0000928,phage0000930,phage0000523,phage0000486,phage0004194,phage2000292,phage0003832,phage2001007,phage2001524,phage2000152,phage2000350,phage0000615,phage0005937,phage0005639,phage0000756,phage0005727,phage2001463,phage2001379,phage2000837,phage2000557,phage0000666,phage0004447,phage0000305,phage0005166,phage2000017,phage0005435,phage0005424,phage0001772,phage2000977,phage0000506,phage0000324,phage0002353,phage2002344,phage0000423,phage0001344,phage0005174,phage0000233,phage0000339,phage0000717,phage0005429,phage2000586,phage0002902,phage0005370,phage0005183,phage0002286,phage0005897,phage0002251,phage0003184,phage0000155,phage0001514,phage0000344,phage0000498,phage0002050,phage0005393,phage0004510,phage0004697,phage2002201,phage0005427,phage1002035,phage0005860,phage0000964,phage2000218,phage2002382,phage0005803,phage0000685,phage2002295,phage0001474,phage2002058,phage2000967,phage0002826,phage0002824,phage2000187,phage2000430,phage0003920,phage2000420,phage0001446,phage0002213,phage2000421,phage2001926,phage2000506,phage2000241,phage0001241,phage0002220,phage0002423,phage0003188,phage0003997,phage2001428,phage0005912,phage0005769,phage2000537,phage0005997,phage0005987,phage0000859,phage0005109,phage0006651,phage0002007,phage0000426,phage0004212,phage0005235,phage2001844,phage0005959,phage2000788,phage2001497,phage2001135,phage0002462,phage2000502,phage0003765,phage0006340,phage0006541,phage0001998,phage2001897,phage0002375,phage1001005,phage2002023,phage0003097,phage2001727,phage2001747,phage0001592,phage0001600,phage0005409,phage0004918,phage0004251,phage0005436,phage0003231,phage0005831,phage0001973,phage0004181,phage0000464,phage2002062,phage0000698,phage0005349,phage0001784,phage0001326,phage1000447,phage0005432,phage0005280,phage0000229,phage0001546,phage0000942,phage0005711,phage0000447,phage0001700,phage0001543,phage0005433,phage0005237,phage0001569,phage0005347,phage0000156,phage0000343,phage0005234,phage0001790,phage2001130,phage0001630,phage2000481,phage0001016,phage0001386,phage0001793,phage0006553,phage0002339,phage0004467,phage0005565,phage0000996,phage0004679,phage0005337,phage1001004,phage0004074,phage0005731,phage0001641,phage0001580,phage0002263,phage0001000,phage0005233,phage0006451,phage0001019,phage0001631,phage0001008,phage0001009,phage0005925,phage0001635,phage0005984,phage0001014,phage0001644,phage0001010,phage0001577,phage0003985,phage0002001,phage0006157,phage0001575,phage0002290,phage0006136,phage0006141,phage0002959,phage0006140,phage0006143,phage0006147,phage0006151,phage0004476,phage0006163,phage0005116,phage0005774,phage0002968,phage0000044,phage0004475,phage0002973,phage0000043,phage0000027,phage0000026,phage0000034,phage0002977,phage0000048,phage0000038,phage0002954,phage0000411,phage0000049,phage0003091,phage0000682,phage0000046,phage0006527,phage0006009,phage0002986,phage0004665,phage0002258,phage0002607,phage0002277,phage0005807,phage0001521,phage0001534,phage0005980,phage0005920,phage0006270,phage0001941,phage0002298,phage0002355,phage0000300,phage0002544,phage0005310,phage0001448,phage2001978,phage2000024,phage2001010,phage2000980,phage0000883,phage2000898,phage0001212,phage0000884,phage2001202,phage2001990,phage0003056,phage1001002,phage1001006,phage0001441'
PHAGES = 'phage0000000,phage0000002,phage0000013,phage0000015,phage0000017,phage0000023,phage0000024,phage0000045,phage0000047,phage0000048,phage0000057,phage0000063,phage0000077,phage0000086,phage0000089,phage0000097,phage0000099,phage0000105,phage0000119,phage0000120,phage0000123,phage0000126,phage0000128,phage0000130,phage0000136,phage0000144,phage0000155,phage0000165,phage0000173,phage0000182,phage0000195,phage0000202,phage0000206,phage0000212,phage0000222,phage0000224,phage0000226,phage0000234,phage0000238,phage0000241,phage0000250,phage0000269,phage0000278,phage0000280,phage0000292,phage0000300,phage0000303,phage0000304,phage0000308,phage0000309,phage0000310,phage0000311,phage0000312,phage0000320,phage0000323,phage0000325,phage0000335,phage0000340,phage0000343,phage0000349,phage0000350,phage0000351,phage0000354,phage0000358,phage0000360,phage0000362,phage0000373,phage0000377,phage0000386,phage0000388,phage0000391,phage0000396,phage0000398,phage0000399,phage0000401,phage0000416,phage0000426,phage0000444,phage0000448,phage0000452,phage0000453,phage0000454,phage0000464,phage0000477,phage0000501,phage0000507,phage0000509,phage0000510,phage0000511,phage0000512,phage0000523,phage0000524,phage0000527,phage0000528,phage0000534,phage0000538,phage0000543,phage0000549,phage0000579,phage0000580,phage0000587,phage0000603,phage0000605,phage0000608,phage0000611,phage0000668,phage0000670,phage0000691,phage0000693,phage0000700,phage0000706,phage0000709,phage0000717,phage0000729,phage0000734,phage0000802,phage0000803,phage0000819,phage0000832,phage0000842,phage0000853,phage0000854,phage0000855,phage0000857,phage0000868,phage0000874,phage0000880,phage0000881,phage0000886,phage0000898,phage0000902,phage0000903,phage0000912,phage0000916,phage0000917,phage0000919,phage0000921,phage0000930,phage0000931,phage0000936,phage0000937,phage0000944,phage0000951,phage0000956,phage0000957,phage0000960,phage0000961,phage0000963,phage0000964,phage0000966,phage0000974,phage0000975,phage0000983,phage0000984,phage0000985,phage0000987,phage0000995,phage0001004,phage0001009,phage0001010,phage0001023,phage0001043,phage0001047,phage0001048,phage0001050,phage0001053,phage0001057,phage0001059,phage0001064,phage0001077,phage0001081,phage0001084,phage0001085,phage0001087,phage0001089,phage0001092,phage0001095,phage0001117,phage0001118,phage0001119,phage0001132,phage0001139,phage0001144,phage0001154,phage0001158,phage0001165,phage0001170,phage0001171,phage0001179,phage0001182,phage0001194,phage0001195,phage0001199,phage0001208,phage0001222,phage0001224,phage0001228,phage0001235,phage0001245,phage0001262,phage0001264,phage0001268,phage0001273,phage0001280,phage0001286,phage0001287,phage0001289,phage0001298,phage0001307,phage0001310,phage0001313,phage0001315,phage0001317,phage0001323,phage0001324,phage0001325,phage0001326,phage0001328,phage0001355,phage0001359,phage0001368,phage0001378,phage0001392,phage0001398,phage0001400,phage0001401,phage0001411,phage0001420,phage0001422,phage0001424,phage0001428,phage0001432,phage0001440,phage0001452,phage0001454,phage0001456,phage0001476,phage0001498,phage0001499,phage0001519,phage0001520,phage0001524,phage0001526,phage0001541,phage0001543,phage0001549,phage0001564,phage0001574,phage0001585,phage0001589,phage0001593,phage0001594,phage0001606,phage0001607,phage0001621,phage0001635,phage0001636,phage0001638,phage0001642,phage0001647,phage0001649,phage0001651,phage0001654,phage0001657,phage0001670,phage0001673,phage0001694,phage0001697,phage0001702,phage0001719,phage0001731,phage0001737,phage0001743,phage0001744,phage0001750,phage0001751,phage0001753,phage0001779,phage0001788,phage0001790,phage0001807,phage0001818,phage0001829,phage0001831,phage0001841,phage0001843,phage0001847,phage0001859,phage0001862,phage0001863,phage0001868,phage0001901,phage0001923,phage0001927,phage0001931,phage0001933,phage0001936,phage0001946,phage0001951,phage0001962,phage0001968,phage0001979,phage0001992,phage0002004,phage0002006,phage0002012,phage0002013,phage0002014,phage0002036,phage0002037,phage0002038,phage0002045,phage0002052,phage0002203,phage0002205,phage0002221,phage0002227,phage0002233,phage0002238,phage0002258,phage0002261,phage0002278,phage0002289,phage0002297,phage0002299,phage0002300,phage0002310,phage0002316,phage0002325,phage0002331,phage0002341,phage0002344,phage0002345,phage0002346,phage0002352,phage0002361,phage0002362,phage0002389,phage0002394,phage0002400,phage0002406,phage0002407,phage0002419,phage0002427,phage0002432,phage0002435,phage0002437,phage0002444,phage0002445,phage0002454,phage0002462,phage0002463,phage0002464,phage0002486,phage0002487,phage0002494,phage0002498,phage0002500,phage0002504,phage0002518,phage0002519,phage0002525,phage0002531,phage0002547,phage0002548,phage0002553,phage0002556,phage0002562,phage0002568,phage0002570,phage0002582,phage0002585,phage0002595,phage0002610,phage0002631,phage0002640,phage0002642,phage0002651,phage0002663,phage0002688,phage0002694,phage0002695,phage0002701,phage0002702,phage0002713,phage0002752,phage0002768,phage0002779,phage0002791,phage0002794,phage0002802,phage0002813,phage0002814,phage0002850,phage0002864,phage0002874,phage0002909,phage0002925,phage0002965,phage0002972,phage0002983,phage0002991,phage0002992,phage0002994,phage0002997,phage0003037,phage0003051,phage0003057,phage0003060,phage0003064,phage0003073,phage0003093,phage0003105,phage0003106,phage0003119,phage0003136,phage0003139,phage0003141,phage0003167,phage0003168,phage0003172,phage0003182,phage0003187,phage0003189,phage0003195,phage0003200,phage0003208,phage0003220,phage0003229,phage0003249,phage0003254,phage0003255,phage0003256,phage0003270,phage0003274,phage0003277,phage0003280,phage0003283,phage0003287,phage0003299,phage0003302,phage0003316,phage0003327,phage0003338,phage0003340,phage0003345,phage0003346,phage0003354,phage0003408,phage0003414,phage0003415,phage0003421,phage0003492,phage0003495,phage0003500,phage0003712,phage0003720,phage0003736,phage0003738,phage0003745,phage0003748,phage0003750,phage0003752,phage0003765,phage0003768,phage0003777,phage0003783,phage0003792,phage0003821,phage0003823,phage0003848,phage0003851,phage0003864,phage0003869,phage0003877,phage0003894,phage0003925,phage0003934,phage0003958,phage0003967,phage0003976,phage0003986,phage0003988,phage0004005,phage0004006,phage0004008,phage0004010,phage0004019,phage0004020,phage0004030,phage0004062,phage0004063,phage0004100,phage0004101,phage0004106,phage0004119,phage0004126,phage0004129,phage0004134,phage0004141,phage0004154,phage0004170,phage0004173,phage0004176,phage0004178,phage0004190,phage0004193,phage0004239,phage0004259,phage0004260,phage0004266,phage0004272,phage0004273,phage0004330,phage0004339,phage0004340,phage0004359,phage0004362,phage0004365,phage0004368,phage0004378,phage0004435,phage0004446,phage0004447,phage0004458,phage0004466,phage0004473,phage0004481,phage0004483,phage0004486,phage0004503,phage0004507,phage0004519,phage0004537,phage0004539,phage0004551,phage0004565,phage0004569,phage0004571,phage0004575,phage0004583,phage0004588,phage0004593,phage0004594,phage0004600,phage0004605,phage0004606,phage0004607,phage0004618,phage0004626,phage0004636,phage0004639,phage0004644,phage0004651,phage0004657,phage0004659,phage0004661,phage0004686,phage0004687,phage0004692,phage0004695,phage0004706,phage0004707,phage0004710,phage0004713,phage0004716,phage0004719,phage0004725,phage0004726,phage0004727,phage0004739,phage0004743,phage0004746,phage0004751,phage0004765,phage0004769,phage0004771,phage0004800,phage0004807,phage0004822,phage0004825,phage0004826,phage0004829,phage0004834,phage0004845,phage0004846,phage0004847,phage0004858,phage0004860,phage0004867,phage0004875,phage0004888,phage0004891,phage0004892,phage0004895,phage0004899,phage0004925,phage0004933,phage0004950,phage0004958,phage0004970,phage0004979,phage0004992,phage0004995,phage0004999,phage0005003,phage0005007,phage0005010,phage0005011,phage0005014,phage0005019,phage0005037,phage0005038,phage0005048,phage0005051,phage0005066,phage0005110,phage0005113,phage0005120,phage0005121,phage0005140,phage0005148,phage0005154,phage0005157,phage0005164,phage0005166,phage0005171,phage0005179,phage0005185,phage0005187,phage0005201,phage0005202,phage0005210,phage0005211,phage0005212,phage0005213,phage0005230,phage0005235,phage0005237,phage0005260,phage0005262,phage0005273,phage0005284,phage0005285,phage0005303,phage0005305,phage0005315,phage0005350,phage0005352,phage0005354,phage0005364,phage0005366,phage0005371,phage0005372,phage0005377,phage0005384,phage0005391,phage0005392,phage0005396,phage0005442,phage0005446,phage0005449,phage0005458,phage0005459,phage0005483,phage0005484,phage0005491,phage0005496,phage0005519,phage0005523,phage0005549,phage0005551,phage0005553,phage0005560,phage0005572,phage0005579,phage0005584,phage0005590,phage0005596,phage0005602,phage0005608,phage0005611,phage0005613,phage0005623,phage0005626,phage0005639,phage0005640,phage0005646,phage0005649,phage0005652,phage0005669,phage0005686,phage0005689,phage0005690,phage0005700,phage0005706,phage0005708,phage0005716,phage0005720,phage0005723,phage0005735,phage0005744,phage0005753,phage0005771,phage0005785,phage0005790,phage0005794,phage0005819,phage0005835,phage1000187,phage1000188,phage1000847,phage1000849,phage1001018,phage1001060,phage1001644,phage1001671,phage1002052,phage2000001,phage2000009,phage2000024,phage2000033,phage2000040,phage2000064,phage2000066,phage2000074,phage2000090,phage2000122,phage2000153,phage2000173,phage2000186,phage2000188,phage2000206,phage2000220,phage2000224,phage2000233,phage2000240,phage2000266,phage2000270,phage2000271,phage2000279,phage2000291,phage2000294,phage2000296,phage2000298,phage2000300,phage2000303,phage2000313,phage2000332,phage2000335,phage2000336,phage2000345,phage2000350,phage2000360,phage2000377,phage2000387,phage2000406,phage2000411,phage2000413,phage2000419,phage2000431,phage2000434,phage2000438,phage2000439,phage2000448,phage2000451,phage2000465,phage2000467,phage2000478,phage2000494,phage2000504,phage2000509,phage2000529,phage2000530,phage2000550,phage2000551,phage2000564,phage2000570,phage2000581,phage2000582,phage2000590,phage2000592,phage2000598,phage2000601,phage2000625,phage2000637,phage2000639,phage2000652,phage2000671,phage2000693,phage2000696,phage2000712,phage2000717,phage2000724,phage2000731,phage2000735,phage2000758,phage2000762,phage2000764,phage2000768,phage2000797,phage2000798,phage2000808,phage2000818,phage2000827,phage2000828,phage2000830,phage2000831,phage2000842,phage2000856,phage2000859,phage2000868,phage2000885,phage2000889,phage2000926,phage2000964,phage2000975,phage2000979,phage2000980,phage2000984,phage2000988,phage2000989,phage2001008,phage2001024,phage2001031,phage2001032,phage2001034,phage2001037,phage2001060,phage2001064,phage2001082,phage2001115,phage2001120,phage2001138,phage2001143,phage2001145,phage2001152,phage2001155,phage2001165,phage2001175,phage2001185,phage2001203,phage2001210,phage2001220,phage2001241,phage2001246,phage2001254,phage2001267,phage2001275,phage2001281,phage2001302,phage2001305,phage2001367,phage2001373,phage2001395,phage2001396,phage2001410,phage2001413,phage2001415,phage2001422,phage2001424,phage2001426,phage2001431,phage2001440,phage2001449,phage2001450,phage2001492,phage2001502,phage2001513,phage2001518,phage2001524,phage2001541,phage2001552,phage2001565,phage2001578,phage2001580,phage2001585,phage2001586,phage2001594,phage2001596,phage2001613,phage2001617,phage2001636,phage2001639,phage2001644,phage2001665,phage2001667,phage2001699,phage2001703,phage2001704,phage2001742,phage2001747,phage2001766,phage2001770,phage2001773,phage2001789,phage2001809,phage2001813,phage2001816,phage2001827,phage2001828,phage2001834,phage2001843,phage2001846,phage2001859,phage2001887,phage2001889,phage2001890,phage2001891,phage2001903,phage2001905,phage2001912,phage2001923,phage2001958,phage2001964,phage2001976,phage2001980,phage2002002,phage2002014,phage2002019,phage2002023,phage2002026,phage2002035,phage2002041,phage2002049,phage2002065,phage2002068,phage2002073,phage2002085,phage2002106,phage2002127,phage2002140,phage2002159,phage2002174,phage2002179,phage2002180,phage2002181,phage2002198,phage2002202,phage2002208,phage2002220,phage2002249,phage2002252,phage2002274,phage2002285,phage2002310,phage2002329,phage2002339,phage2002347,phage2002364,phage2002366,phage2002382,phage2002391,phage2002393,phage2002395,phage2002415,phage2002416,phage2002418,phage2002419,phage2002425,phage2002427,phage2002429,phage2002437,phage2002474,phage2002503,phage2002509,phage2002511,phage2002514,phage2002524,phage2002525'

CLUSTER_METHODS = ['needle_mcl', 'mcl']
# CLUSTER_METHODS = ['mcl']
# CLUSTER_METHODS = ['spectral']

###################################################################################################
# rules ###########################################################################################
###################################################################################################

rule run:
  input:
    expand('{data_dir}/011_{cluster_method}_cluster_annotations/Cluster_{i}.result',
            data_dir=DATA_DIR,
            cluster_method=CLUSTER_METHODS,
            i=CLUSTERS),

    expand('{data_dir}/015_{cluster_method}.{type}.{spec}.stats',
            data_dir=DATA_DIR,
            cluster_method=CLUSTER_METHODS,
            type='fs',
            spec=HOSTS.split(',')),

rule download:
  output:
    expand('{{data_dir}}/001_{{database}}.{suffix}', suffix=SUFFIXES)
  params:
    script_dir=SCRIPT_DIR
  log:
    '{data_dir}/001_{database}.stdout',
    '{data_dir}/001_{database}.stderr'
  shell:
    '''
    mkdir -p {wildcards.data_dir}
    {params.script_dir}/001_download_from_{wildcards.database}.py {wildcards.data_dir} > {log[0]} 2> {log[1]}
    '''

rule merge:
  input:
    expand('{{data_dir}}/001_{database}.{suffix}', database=DATABASES, suffix=SUFFIXES)
  output:
    '{data_dir}/002_merged.genes.conversion',
    '{data_dir}/002_merged.genes.fasta',
    '{data_dir}/002_merged.genomes.conversion',
    '{data_dir}/002_merged.genomes.fasta'
  shell:
    '''
    cat {wildcards.data_dir}/001_*.genes.conversion   > {output[0]}
    cat {wildcards.data_dir}/001_*.genes.fasta        > {output[1]}
    cat {wildcards.data_dir}/001_*.genomes.conversion > {output[2]}
    cat {wildcards.data_dir}/001_*.genomes.fasta      > {output[3]}
    '''

rule eliminate_duplicates:
  input:
    '{data_dir}/002_merged.genes.conversion',
    '{data_dir}/002_merged.genomes.conversion',
    '{data_dir}/002_merged.genomes.fasta'
  output:
    '{data_dir}/003_deduplicated.genes.conversion',
    '{data_dir}/003_deduplicated.genomes.conversion',
    '{data_dir}/003_deduplicated.genomes.fasta'
  params:
    script_dir=SCRIPT_DIR
  shell:
    '''
    {params.script_dir}/003_deduplicate_genomes.py {input[2]} {input[1]} {input[2]} {wildcards.data_dir}
    '''

rule annotate:
  input:
    '{data_dir}/003_deduplicated.genomes.fasta'
  output:
    '{data_dir}/004_PROKKA/genomes.gbk'
  threads:
    THREADS
  shell:
    '''
    prokka  --force                                                           \
            --cpus {threads}                                                  \
            --kingdom Viruses                                                 \
            --outdir {wildcards.data_dir}/004_PROKKA                          \
            --prefix genomes                                                  \
            {input[0]}
    '''

rule extract_genes:
  input:
    '{data_dir}/004_PROKKA/genomes.gbk'
  output:
    '{data_dir}/005_annotated.genes.conversion',
    '{data_dir}/005_annotated.genes.fasta'
  params:
    script_dir=SCRIPT_DIR,
    prefix='{data_dir}/005_annotated'
  shell:
    '''
    {params.script_dir}/005_extract_prokka_genes.py {input[0]}                \
                                                    {params.prefix}
    '''

rule count_hosts:
  input:
    '{data_dir}/003_deduplicated.genomes.conversion'
  output:
    '{data_dir}/004_hosts',
    '{data_dir}/004_hosts.counts'
  params:
    script_dir=SCRIPT_DIR
  shell:
    '''
    {params.script_dir}/101_create_host_string.py {input[0]} > {output[0]}
    sort -k 2 {output[0]} | cut -f2 | sed "s/\\(^.\\{{7\\}}\\).*/\\1/" | uniq -c | sort -nr > {output[1]}
    '''

rule split_dataset:
  input:
    '{data_dir}/003_deduplicated.genomes.conversion',
    '{data_dir}/003_deduplicated.genomes.fasta',
    '{data_dir}/005_annotated.genes.conversion',
    '{data_dir}/005_annotated.genes.fasta',
    '{data_dir}/004_hosts',
    '{data_dir}/004_hosts.counts'
  output:
    expand('{{data_dir}}/006_{set_name}.{suffix}', set_name=['train', 'test', 'other'], suffix=SUFFIXES)
  params:
    script_dir=SCRIPT_DIR,
    train_percentage=TRAIN_PERCENTAGE,
    train_num=TRAIN_NUM,
    hosts=HOSTS
  shell:
    '''
    if [ {params.hosts} = "" ]; then
        HOSTS=$(grep -v no_host {input[5]} | head -n {params.train_num} | tr -s " " | cut -f3 -d " " | tr "\n" ",")
        HOSTS=${{HOSTS::-1}}
    else
        HOSTS={params.hosts}
    fi

    {params.script_dir}/006_split_train_test_other.py {input[2]} {input[3]} {input[0]} {input[1]} {input[4]} \
                                                      ${{HOSTS}} {params.train_percentage}
    '''

rule cd_hit:
  input:
    '{data_dir}/006_train.genes.fasta'
  output:
    '{data_dir}/007_train.cd-hit.genes.fasta',
    '{data_dir}/007_train.cd-hit.genes.fasta.clstr'
  threads:
    THREADS
  shell:
    '''
    cd-hit -c 1 -s 1 -g 1 -d 0 -T {threads} -i {input[0]} -o {output[0]}
    '''

rule crocoblast:
  input:
    '{data_dir}/007_train.cd-hit.genes.fasta'
  output:
    '{data_dir}/008_crocoblast.abc'
  params:
    script_dir=SCRIPT_DIR
  threads:
    THREADS
  shell:
    '''
    rm -rf {wildcards.data_dir}/008_crocoblast/ {wildcards.data_dir}/008_crocoblast_database/
    cp -r  {params.script_dir}/crocoblast/ {wildcards.data_dir}/008_crocoblast/
    mkdir  {wildcards.data_dir}/008_crocoblast_database

    {wildcards.data_dir}/008_crocoblast/crocoblast  -add_database                       \
                                                      --sequence_file                   \
                                                        protein                         \
                                                        {input[0]}                      \
                                                        007_train.cd-hit.genes.fasta    \
                                                        {wildcards.data_dir}/008_crocoblast_database

    {wildcards.data_dir}/008_crocoblast/crocoblast  -add_to_queue                       \
                                                      blastp                            \
                                                      007_train.cd-hit.genes.fasta      \
                                                      {input[0]}                        \
                                                      {wildcards.data_dir}              \
                                                      --blast_options                   \
                                                        -outfmt 6                       \
                                                        -max_target_seqs 1000000        \
                                                        -max_hsps 1

    echo "{wildcards.data_dir}/008_crocoblast/crocoblast -run > /dev/null; touch {wildcards.data_dir}/008_finished"   \
    | qsub -l thr={threads} -cwd -N crocoblast

    while [ ! -f {wildcards.data_dir}/008_finished ]; do
        sleep 20m
    done

    mv {wildcards.data_dir}/CrocoBLAST_1 {wildcards.data_dir}/008_crocoblast_output
    cut -f 1,2,11 {wildcards.data_dir}/008_crocoblast_output/complete_assembled_output > {output[0]}
    '''

rule blast_to_needle:
  input:
    '{data_dir}/008_crocoblast.abc',
    '{data_dir}/006_train.genes.fasta'
  output:
    '{data_dir}/008_crocoblast.needle.abc'
  params:
    script_dir=SCRIPT_DIR,
    data_dir=DATA_DIR
  shell:
    '''
    NEEDLE_DIR={params.data_dir}/009_needle

    rm -rf ${{NEEDLE_DIR}}
    mkdir  ${{NEEDLE_DIR}}

    {params.script_dir}/007_parallelize_global_alignment_from_blast.py  {input[0]}                \
                                                                        {input[1]}                \
                                                                        ${{NEEDLE_DIR}}

    while [ ! -f ${{NEEDLE_DIR}}/qsub_completed ]; do
        sleep 20m
    done;

    for i in $(seq 0 1 9); do
        cat ${{NEEDLE_DIR}}/tmp/${{i}}*.abc > ${{NEEDLE_DIR}}/tmp/${{i}}.final.abc        \
            && echo "${{NEEDLE_DIR}}/tmp/${{i}}.final.abc created."                           \
            || echo "There are no files to merge into ${{i}}.final.abc."
    done;

    cat ${{NEEDLE_DIR}}/tmp/*.final.abc > {output[0]}
    '''

rule cluster_spectral:
  input:
    '{data_dir}/008_crocoblast.abc'
  output:
    '{data_dir}/009_spectral.clusters'
  shell:
    '''
    clusterx -t blast {input[0]} -o {output[0]}
    '''

rule cluster_mcl:
  input:
    '{data_dir}/008_crocoblast.abc'
  output:
    '{data_dir}/009_mcl.clusters'
  shell:
    '''
    clusterx -m mcl -p inflation=1.2 {input[0]} -o {output[0]}
    '''

rule cluster_needle_mcl:
  input:
    '{data_dir}/008_crocoblast.needle.abc'
  output:
    '{data_dir}/009_needle_mcl.clusters'
  shell:
    '''
    clusterx -m mcl -p inflation=1.2,dont_transform=True {input[0]} -o {output[0]}
    '''

rule create_cluster_file:
  input:
    '{data_dir}/009_{cluster_method}.clusters',
    '{data_dir}/007_train.cd-hit.genes.fasta.clstr'
  output:
    '{data_dir}/010_{cluster_method}.tsv'
  params:
    script_dir=SCRIPT_DIR
  shell:
    '''
    {params.script_dir}/010_create_cluster_file.py {input[0]} {input[1]} {output[0]}
    '''

rule create_matrix:
  input:
    '{data_dir}/010_{cluster_method}.tsv',
    '{data_dir}/006_train.genes.conversion',
    '{data_dir}/006_train.genomes.fasta'
  output:
    '{data_dir}/011_matrix.{cluster_method}.raw.tsv'
  params:
    script_dir=SCRIPT_DIR,
    genomes_list='{data_dir}/011_train.genomes.list'
  shadow:
    'shallow'
  shell:
    '''
    grep "^>" {input[2]} | tr -d ">" | sort > {params.genomes_list}

    {params.script_dir}/009_parallelize_matrix_creation_from_mcl.py {input[1]}                    \
                                                                    {input[0]}                    \
                                                                    {params.genomes_list}

    while [ $(ls {wildcards.data_dir}/matrix.part* | wc -l) -ne 11 ]; do
        sleep 1m
    done

    sleep 1m
    cat {wildcards.data_dir}/matrix.part* > {output[0]}
    rm {wildcards.data_dir}/matrix.part*
    '''

rule annotate_cluster:
  input:
    '{data_dir}/005_annotated.genes.fasta',
    '{data_dir}/010_{cluster_method}.tsv',
  output:
    '{data_dir}/011_{cluster_method}_cluster_annotations/Cluster_{i}.result'
  params:
    script_dir=SCRIPT_DIR,
    cluster_annotation_dir='{data_dir}/011_{cluster_method}_cluster_annotations'
  shell:
    '''
    mkdir -p {params.cluster_annotation_dir}

    {params.script_dir}/101_prepare_cluster_for_interpro.py {input[0]}                            \
                                                            {input[1]}                            \
                                                            {wildcards.i}                         \
                                                            > {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta

    cd-hit  -i {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta                  \
            -o {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta.cd-hit           \
            -c 1 -d 0
            # -T 16

    interproscan  -i {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta.cd-hit     \
                  -o {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta.cd-hit.tsv \
                  -f tsv -goterms
                  # -cpu 16

    cut -f 12,13 {params.cluster_annotation_dir}/Cluster_{wildcards.i}.genes.fasta.cd-hit.tsv     \
        | sort | uniq -c | sort -nr                                                               \
        > {params.cluster_annotation_dir}/Cluster_{wildcards.i}.result
    '''

rule select_features:
  input:
    '{data_dir}/011_matrix.{cluster_method}.raw.tsv'
  output:
    '{data_dir}/011_matrix.{cluster_method}.fs.tsv'
  params:
    script_dir=SCRIPT_DIR,
    variance_threshold=VARIANCE_THRESHOLD
  shell:
    '''
    {params.script_dir}/011_feature_selection.py {input[0]} {output[0]} {params.variance_threshold}
    '''

rule split_matrix:
  input:
    '{data_dir}/011_matrix.{cluster_method}.{type}.tsv',
    '{data_dir}/004_hosts'
  output:
    expand([
            '{{data_dir}}/012_matrix.{{cluster_method}}.{{type}}.{host}.tsv',
            '{{data_dir}}/012_hosts.{{cluster_method}}.{{type}}.{host}'
            ], host=HOSTS.split(',')),
  params:
    script_dir=SCRIPT_DIR,
    hosts=HOSTS
  shell:
    '''
    {params.script_dir}/012_split_matrix.py {input[0]} {input[1]} {params.hosts}
    '''

rule create_model:
  input:
    expand('{{data_dir}}/012_matrix.{{cluster_method}}.{{type}}.{host}.tsv', host=HOSTS.split(',')),
  output:
    '{data_dir}/013_model.{cluster_method}.{type}.{spec}.pkl',
    '{data_dir}/013_tree.{cluster_method}.{type}.{spec}.pdf'
  params:
    script_dir=SCRIPT_DIR
  shell:
    '''
    {params.script_dir}/013_decision_tree.py {wildcards.spec} {input}
    '''

rule split_test_fasta:
  input:
    '{data_dir}/006_test.genomes.fasta'
  output:
    '{data_dir}/014_classification/{phage}.genomes.fasta'
  params:
    classify_dir='{data_dir}/014_classification',
  shell:
    '''
    mkdir -p {params.classify_dir}

    grep -A 1 {wildcards.phage} {input[0]} > {output[0]}
    '''

rule get_genes:
  input:
    '{data_dir}/014_classification/{phage}.genomes.fasta'
  output:
    '{data_dir}/014_classification/{phage}.genes.fasta'
  params:
    script_dir=SCRIPT_DIR,
    classify_dir='{data_dir}/014_classification',
    prefix='{data_dir}/014_classification/{phage}'
  shell:
    '''
    prokka  --force                                                                               \
            --kingdom Viruses                                                                     \
            --outdir {params.classify_dir}                                                        \
            --prefix {wildcards.phage}                                                            \
            {input[0]}

    {params.script_dir}/005_extract_prokka_genes.py {params.classify_dir}/{wildcards.phage}.gbk   \
                                                    {params.prefix}
    '''

rule blast_genes:
  input:
    '{data_dir}/014_classification/{phage}.genes.fasta',
  output:
    '{data_dir}/014_classification/{phage}.genes.blast',
  params:
    database='{data_dir}/008_crocoblast_database/007_train.cd-hit.genes.fasta',
  shell:
    '''
    blastp  -query {input[0]}                                                                     \
            -db {params.database}                                                                 \
            -out {output[0]}                                                                      \
            -outfmt "6 qseqid sseqid score pident evalue"                                         \
            -max_target_seqs 1
    '''

rule classify:
  input:
    '{data_dir}/014_classification/{phage}.genes.blast',
    '{data_dir}/010_{cluster_method}.tsv',
    '{data_dir}/011_matrix.{cluster_method}.{type}.tsv',
    '{data_dir}/013_model.{cluster_method}.{type}.{spec}.pkl',
  output:
    '{data_dir}/014_classification/{phage}.{cluster_method}.{type}.{spec}.vector',
    '{data_dir}/014_classification/{phage}.{cluster_method}.{type}.{spec}.result',
  params:
    script_dir=SCRIPT_DIR,
  shell:
    '''
    {params.script_dir}/014_create_vector.py  {input[0]} {input[1]} {input[2]} {input[3]}         \
                                              {output[0]} {output[1]}
    '''

rule stats:
  input:
    results=expand('{{data_dir}}/014_classification/{phage}.{{cluster_method}}.{{type}}.{{spec}}.result',
                    phage=PHAGES.split(',')),
    hosts='{data_dir}/004_hosts'
  output:
    '{data_dir}/015_{cluster_method}.{type}.{spec}.results',
    '{data_dir}/015_{cluster_method}.{type}.{spec}.stats'
  params:
    script_dir=SCRIPT_DIR,
  shell:
    '''
    cat {input.results} > {output[0]}

    {params.script_dir}/015_calculate_stats.py {input.hosts} {output[0]} {output[1]}
    '''
